---
layout: application_layout
parent: /apps.html
source_url: https://github.com/alphagov/govuk-developer-docs/blob/master/data/applications.yml
---

<% ownership = capture_markdown do %>
  <% if application.retired? %>
    This application is retired.
  <% elsif application.team || application.dependencies_team %>
    <% if application.team == application.dependencies_team %>
      **<%= application.team %>** owns the application and is responsible for updating its dependencies.
    <% elsif application.team && application.dependencies_team %>
      **<%= application.team %>** owns the application, but **<%= application.dependencies_team %>** is responsible for updating its dependencies.
    <% elsif application.team %>
      **<%= application.team %>** owns the application.
    <% elsif application.dependencies_team %>
      **<%= application.dependencies_team %>** is responsible for updating its dependencies.
    <% end %>
  <% else %>
    Nobody owns this application.
  <% end %>
<% end %>

<% hosting = capture_markdown do %>
  <% if application.hosting_name == "None" %>
  There is no production version of this application yet.
  <% else %>
  The production version of this application is hosted on **<%= application.hosting_name %>**.
  <% end %>

  <% if application.production_hosted_on == "aws" %>
```bash
gds govuk connect ssh -e production aws/<%= application.aws_puppet_class %>
```
  <% end %>
<% end %>

<% links = capture do %>
  <ul>
    <% if application.sentry_url %>
      <li><%= link_to "Sentry (error tracking)", application.sentry_url %></li>
    <% end %>

    <% if application.management_url %>
      <li><%= link_to "Manage application", application.management_url %></li>
    <% end %>

    <% if application.puppet_url %>
      <li><%= link_to "Puppet configuration", application.puppet_url %></li>
    <% end %>

    <% if application.deploy_url %>
      <li><%= link_to "Deploy scripts", application.deploy_url %></li>
    <% end %>

    <% if application.dashboard_url %>
      <li><%= link_to "Deployment dashboard", application.dashboard_url %></li>
    <% end %>

    <% if application.publishing_e2e_tests_url %>
      <li><%= link_to "Publishing E2E scenarios", application.publishing_e2e_tests_url %> (warning: not all apps have E2E tests)</li>
    <% end %>

    <% if application.api_docs_url %>
      <li><%= link_to "API docs", application.api_docs_url %></li>
    <% end %>

    <% if application.component_guide_url %>
      <li><%= link_to "Component guide", application.component_guide_url %></li>
    <% end %>

    <% if application.metrics_dashboard_url %>
      <li><%= link_to "Metrics dashboard", application.metrics_dashboard_url %></li>
    <% end %>

    <% if application.production_url %>
      <li><%= link_to application.production_url.gsub('https://', ''), application.production_url %></li>
    <% end %>
  </ul>
<% end %>

<%
items = [
  {
    field: "GitHub repository",
    value: sanitize("<a href='#{application.repo_url}'>#{application.github_repo_name}</a>"),
  },
  {
    field: "Ownership",
    value: sanitize(ownership),
  },
  {
    field: "Hosting",
    value: sanitize(hosting),
  },
  {
    field: "Links",
    value: sanitize(links),
  },
]

if application.can_run_rake_tasks_in_jenkins?
  items << {
    field: "Rake tasks",
    value: sanitize(RunRakeTask.links(application)),
  }
end

if manual.pages_for_application(application.app_name).any?
  items << {
    field: "Relevant manual pages",
    value: sanitize(capture do %>
      <ul>
        <% manual.pages_for_application(application.app_name).each do |page| %>
          <li><%= link_to page.data.title, page.url %></li>
        <% end %>
      </ul>
    <% end
    ),
  }
end

if imported_docs = GitHubRepoFetcher.instance.docs(application.app_name)
  items << {
    field: "Imported documents",
    value: sanitize(capture do %>
      <ul>
        <% imported_docs.each do |page| %>
          <li><%= link_to page[:title], page[:path] %></li>
        <% end %>
      </ul>
    <% end
    ),
  }
end

if application.example_published_pages
  items << {
    field: "Example pages published by #{application.app_name}",
    value: sanitize(capture do %>
      <ul>
      <% absolute_path = Regexp.new('^([a-z]+://|//)') %>
      <% application.example_published_pages.each do |example| %>
        <% if absolute_path.match(example['link']) %>
          <li><%= link_to example['title'], "#{example['link']}" %></li>
        <% else %>
          <li><%= link_to example['title'], "https://www.gov.uk#{example['link']}" %></li>
        <% end %>
      <% end %>
      </ul>
    <% end
    ),
  }
end

if application.example_rendered_pages
  items << {
    field: "Example pages rendered by #{application.app_name}",
    value: sanitize(capture do %>
      <ul>
        <% application.example_rendered_pages.each do |example| %>
          <li><%= link_to example['title'], "https://www.gov.uk#{example['link']}" %></li>
        <% end %>
      </ul>
    <% end
    ),
  }
end
%>

<%= ExternalDoc.parse(application.description) %>

<%= GovukPublishingComponents.render(
  "govuk_publishing_components/components/summary_list",
  items: items,
) %>

## README

<% if application.private_repo? %>
  <span class="govuk-error-message">
    Cannot fetch README of private repo.
  </span>
<% elsif ENV["GITHUB_TOKEN"].nil? %>
  <span class="govuk-error-message">
    Cannot fetch README without `GITHUB_TOKEN`.
  </span>
<% elsif application.readme.nil? %>
  <span class="govuk-error-message">
    This repo doesn't have a README.md file.
  </span>
<% else %>
  <div class="embedded-readme">
    <%= ExternalDoc.parse(application.readme, repository: application.github_repo_name, path: "./README.md") %>
  </div>
<% end %>
